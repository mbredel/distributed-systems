<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.hda.fbi.ds.mbredel</groupId>
    <artifactId>rest-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- The versions of ALL the libraries used by this project. -->
        <akka.version>2.4.17</akka.version>
        <commons.cli.version>1.3.1</commons.cli.version>
        <guice.version>4.1.0</guice.version>
        <junit.version>4.12</junit.version>
        <logback.classic.version>1.1.3</logback.classic.version>
        <spark.version>2.5.4</spark.version>
        <cfg4j.version>4.4.0</cfg4j.version>
        <jackson.version>2.12.1</jackson.version>
        <javax.persistence.version>1.0.2</javax.persistence.version>
        <unirest.version>1.4.9</unirest.version>
        <!-- The versions of ALL the plugins used by this project. -->
        <plugin.clean.version>3.0.0</plugin.clean.version>
        <plugin.compiler.version>3.5.1</plugin.compiler.version>
        <plugin.jar.version>3.0.2</plugin.jar.version>
        <plugin.docker.version>0.20.0</plugin.docker.version>
        <plugin.dependency.version>3.0.0</plugin.dependency.version>
        <plugin.license.version>1.12</plugin.license.version>
        <plugin.resources.version>3.1.0</plugin.resources.version>
        <!-- Some general properties. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <!-- The Maven Compile plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.compiler.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- The Maven Dependency plugin to copy the dependencies to the Docker build path -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugin.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeArtifactIds>
                                docker-maven-plugin,
                                <!-- maven-*, -->
                                maven-plugin-api
                                maven-assembly-plugin,
                                maven-clean-plugin,
                                maven-compiler-plugin,
                                maven-dependency-plugin,
                                maven-jar-plugin
                            </excludeArtifactIds>
                            <outputDirectory>${project.basedir}/../docker/baseimage/</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- The Maven Resources plugin to copy the resources to the Docker build path -->
	    <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${plugin.resources.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/../docker/rest/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- The Maven Jar plugin to create an executable Jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${plugin.jar.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!--<classpathPrefix>libs/</classpathPrefix>-->
                            <mainClass>de.hda.fbi.ds.mbredel.Main</mainClass>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.basedir}/../docker/rest/</outputDirectory>
                </configuration>
            </plugin>
            <!-- The Maven Docker plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${plugin.docker.version}</version>
                <configuration>
                    <images>
                        <image>
                            <alias>rest</alias>
                            <name>mbredel/rest/rest</name>
                            <build>
                                <dockerFileDir>${project.basedir}/../docker/rest/</dockerFileDir>
                                <dockerFile>Dockerfile</dockerFile>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>baseimage</id>
                        <configuration>
                            <images>
                                <image>
                                    <alias>baseimage</alias>
                                    <name>mbredel/rest/baseimage</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/../docker/baseimage/</dockerFileDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>rest</id>
                        <configuration>
                            <images>
                                <image>
                                    <alias>rest</alias>
                                    <name>mbredel/rest/rest</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/../docker/rest/</dockerFileDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Library dependencies. -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.11</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons.cli.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
            <version>${guice.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.classic.version}</version>
        </dependency>
        <dependency>
            <groupId>org.cfg4j</groupId>
            <artifactId>cfg4j-core</artifactId>
            <version>${cfg4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>${unirest.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${javax.persistence.version}</version>
        </dependency>
        <!-- Plugin dependencies to automatically download and install the plugins needed. -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${plugin.compiler.version}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${plugin.jar.version}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${plugin.docker.version}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${plugin.dependency.version}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>${plugin.clean.version}</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${plugin.license.version}</version>
            <type>maven-plugin</type>
        </dependency>
	<dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
	    <version>${plugin.resources.version}</version>
            <type>maven-plugin</type>
        </dependency>
    </dependencies>
</project>
